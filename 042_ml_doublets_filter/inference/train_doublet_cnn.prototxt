# Caffe implementation for barrel_only model
# Still missing:
# - additional features
# - batch_normalization
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  data_param {
    source: "../lmdb_train"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  data_param {
    source: "../lmdb_test"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "flatten_input"
  type: "Flatten"
  bottom: "data"
  top: "flat_data"
}
layer {
  name: "slice_input"
  type: "Slice"
  bottom: "flat_data"
  top: "hit_flat"
  top: "info_data"
  slice_param {
    axis: 1
    slice_point: 392
  }
}
layer {
  name: "hit_reshape"
  type: "Reshape"
  bottom: "hit_flat"
  top: "hit_data"
  reshape_param {
    shape {
      dim: 0
      dim: 8
      dim: 7
      dim: 7
    }
  }
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "hit_data"
  top: "hit_data"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "hit_data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 5
    pad: 2           # same convolution
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01        
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"  # this is an in-place operation
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    stride: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01        
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    stride: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01        
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    stride: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01        
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv4"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
    stride: 1
  }
}

################################################
##   Fully connected part: concat features!   ##
################################################

# batch-norm???
layer {
  name: "flatten_input"
  type: "Flatten"
  bottom: "pool5"
  top: "flat_pool5"
}
layer {
  name: "concat_info"
  type: "Concat"
  bottom: "flat_pool5"
  bottom: "info_data"
  top: "concat_data"
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "concat_data"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "gaussian"
      std: 0.01        
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01        
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01        
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}